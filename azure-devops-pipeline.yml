trigger: none
pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  IMAGE_NAME: 'ahmednasr7/azureci-image1'
  CONTAINERAPPS_APP: 'album-backend-api'
  CONTAINERAPPS_ENVIRONMENT: 'aca-env1'
  RESOURCE_GROUP: 'rg-containerapps-workshop1'

jobs:
- job: BuildAndDeploy
  displayName: 'Build and Deploy Container to Azure'

  steps:
    # Checkout the code from the repository
    - task: Checkout@v2
      displayName: 'Checkout repository'
      
    # Build and Push Docker Image to Docker Hub using Service Connection
    - task: Docker@2
      displayName: 'Build and Push Docker Image to Docker Hub'
      inputs:
        containerRegistry: 'ahmednasr7-dockerhub' # Name of your Docker Hub service connection
        repository: '$(IMAGE_NAME)'
        command: 'buildAndPush'
        Dockerfile: './backend_api/backend_api_csharp/Dockerfile'
        tags: '$(Build.BuildId)' # Or any other tag you prefer
        buildContext: './backend_api/backend_api_csharp'

    # Deploy the container to Azure Container Apps
    - task: AzureCLI@2
      displayName: 'Deploy to Azure Container App'
      inputs:
        azureSubscription: 'azure-connection' # Use the Azure service connection for deployment
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Create the Container Apps environment if it doesn't exist
          az containerapp env create --name $(CONTAINERAPPS_ENVIRONMENT) --resource-group $(RESOURCE_GROUP)
          
          # Create the container app and deploy the container image
          az containerapp create --name $(CONTAINERAPPS_APP) \
            --resource-group $(RESOURCE_GROUP) \
            --environment $(CONTAINERAPPS_ENVIRONMENT) \
            --image docker.io/$(IMAGE_NAME):$(Build.BuildId) \
            --target-port 3500 \
            --ingress external
